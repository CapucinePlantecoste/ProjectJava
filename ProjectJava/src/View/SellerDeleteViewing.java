//this class is used to enable the seller to delete a viewing of one of his properties 
package View;

import Model.Offer;
import Model.Buyer;
import Model.Employee;
import Model.Property;
import Model.Seller;
import Model.Visit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import projectjava.First;
import Model.VisitDAOImpl;

/**
 *
 * @author thoma
 */
public class SellerDeleteViewing extends javax.swing.JFrame {

    /**
     * Creates new form SellerDeleteViewing
     */
    public SellerDeleteViewing(Seller a, ArrayList<Buyer> b, ArrayList<Seller> s, ArrayList<Employee> e, ArrayList<Property> prop, ArrayList<Visit> vis, ArrayList<Offer> off, ArrayList<Visit> mv, ArrayList<Property> pbis) {
        //constructor of the class
        buyers = b;
        //Array List of all the buyers of the application
        sellers = s;
        //Array List of all the sellers of the application
        emp = e;
        //Array List of all the employees of the application
        pr = prop;
        //Array List of all the properties of the application
        v = vis;
        //Array List of all the viewings of the application
        o = off;
        //Array List of all the offers of the application
        newseller = a;
        //current connected seller 
        myviewings = mv;
        //arraylist of the personal viewings of the connected seller 
        propviewing = pbis;
        //array list of the properties of the sellers that have at least 1 viewing

        initComponents();
        //automatically generated constructor
        this.initjcb1();
        //function that enables to fill the combobox with the properties of the connected seller that have at least one viewing 
        jPanelViewings.hide();
        jPanel1.hide();
        //in the beginning, all the other panels are hidden 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jPanelViewings = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabelDescription = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jLabelLocation = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Delete a viewing");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectjava/logo 2 projet info.png"))); // NOI18N

        jButton1.setText("<= Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select one of your property to  delete a viewing");

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select one of your properties for sale" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jButton1)
                .addGap(87, 87, 87)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jPanel2.add(jPanel4);
        jPanel4.setBounds(0, 0, 740, 830);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton5.setText("Log Out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(1360, 100, 100, 23);

        jPanelViewings.setBackground(new java.awt.Color(255, 255, 255));

        jComboBox2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Viewings" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelViewingsLayout = new javax.swing.GroupLayout(jPanelViewings);
        jPanelViewings.setLayout(jPanelViewingsLayout);
        jPanelViewingsLayout.setHorizontalGroup(
            jPanelViewingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelViewingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox2, 0, 240, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelViewingsLayout.setVerticalGroup(
            jPanelViewingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelViewingsLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jPanel2.add(jPanelViewings);
        jPanelViewings.setBounds(750, 180, 260, 230);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelDescription.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelDescription.setForeground(new java.awt.Color(204, 204, 0));

        jLabelId.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelId.setForeground(new java.awt.Color(204, 204, 0));

        jLabelDate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelDate.setForeground(new java.awt.Color(204, 204, 0));

        jLabelLocation.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelLocation.setForeground(new java.awt.Color(204, 204, 0));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelId, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jButton2)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabelDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabelLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabelId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton2)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel1);
        jPanel1.setBounds(990, 190, 580, 430);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1575, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //log out button
        this.toBack();
        //when we click on the button
        setVisible(false);
        //this page disappears
        new First(buyers, sellers, emp, pr, v, o).toFront();
        //we go back on the first page
        new First(buyers, sellers, emp, pr, v, o).setState(java.awt.Frame.NORMAL);
        new First(buyers, sellers, emp, pr, v, o).setVisible(true);
        // we set the first page visible
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //combo box that displays all the properties of the seller that have at least 1 viewing
        int tampon = 0;
        //temporary buffer

        String selected = (String) jComboBox1.getSelectedItem();
        //we get what has been selected 
        if (selected.equals("Select one of your properties for sale")) {
            //if the seller doesn't select any option but remains on the first option of the combo box

            jPanelViewings.hide();
            jPanel1.hide();
            //we do not do anything so all the panels remain hiden 

        } else {
        //otherwise, the seller choses one of the properties

            for (int i = 0; i < propviewing.size(); ++i) {
                //we go through the list of his properties that have at least 1 viewing
                if (selected.equals(propviewing.get(i).getdescription() + " idproperty : " + propviewing.get(i).getid())) {
                    // if what is selected is the same as the description + the id the coresponding property 

                    tampon = i;
                    //we set the value of the buffer to i
                }

            }
            jComboBox2.removeAllItems();
            //we need to clear the second combo box, otherwise, eveytime we click on it, new items are added
            jComboBox2.addItem("Viewings");
            //we give the first item of the combo box 2
            for (int i = 0; i < myviewings.size(); ++i) {
                //we go through all the viewings of the connected seller 
                if (myviewings.get(i).getidprop() == propviewing.get(tampon).getid()) {
                    // if the id of the viewing is equal to the id of the viewing of the coresponding house 
                    jComboBox2.addItem(myviewings.get(i).displaydate() + " idviewing : " + myviewings.get(i).getid());
                    //we add the vewing to the combo box and we display its time 
                }

                jPanelViewings.show();
                //finally, we can display the viewing panel
                jPanel1.hide();
                //all the other panels are hiden 
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // back button
        this.toBack();
        //if we click on the back button
        setVisible(false);
        //this page disappears
        SellerFirst a = new SellerFirst(newseller, buyers, sellers, emp, pr, v, o);
        //we go back on the first page
        a.setVisible(true);
        //we set the first page visible 
        new SellerFirst(newseller, buyers, sellers, emp, pr, v, o).setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        //second combo box : combo box where are displayed the viewings of the selected house 

        int tampon = -1;
        int tampon2 = -1;
        //two temporary buffer 

        String selected1 = (String) jComboBox1.getSelectedItem();
        //we get what has been selected in the first combo box
        for (int i = 0; i < propviewing.size(); i++) {
            // we go through all the properties of the connected seller that have at least 1 viewing
            if (selected1.equals(propviewing.get(i).getdescription() + " idproperty : " + propviewing.get(i).getid())) {
                //if what has been selected equals the description + the id of one of the seller property

                tampon = i;
                //we set the value of the buffer to i                 
            }
        }

        //If we don't select anything nothing happens
        if (jComboBox2.getSelectedIndex() < 0) {
        } else {
            String selected2 = (String) jComboBox2.getSelectedItem();
            //we get what has been selected in the second combo box
            if (selected2.equals("Viewings")) {
                //if the seller doesn't select any option but remains on the first option of the combo box
                jPanel1.hide();
                //nothing happens so we hide the panel
            } else {
                //otherwise, the seller clicked on one of the options
                for (int j = 0; j < myviewings.size(); ++j) {
                    //we go through the personal viewings of the connected seller 
                    if ((myviewings.get(j).getidprop() == propviewing.get(tampon).getid()) && ((myviewings.get(j).displaydate() + " idviewing : " + myviewings.get(j).getid()).equals(selected2))) {
                        //if the id of the property is the same id as the property of the viewing and if what has been selected corresponds to the date + the id of the viewing  
                        tampon2 = j;
                        //we set the value of the buffer to j 
                    }
                }

                jLabelDescription.setText(" Description : " + propviewing.get(tampon).getdescription());
                //we set the description in the panel to the get value 
                jLabelLocation.setText(" Location : " + propviewing.get(tampon).getlocation());
                //we set the location in the panel to the get value 
                jLabelId.setText(" Viewing ID : " + myviewings.get(tampon2).getid());
                //we set the id in the panel to the get value 
                jLabelDate.setText(" Date of the viewing : " + myviewings.get(tampon2).displaydate());
                //we set the date in the panel to the get value 
                jPanel1.show();
                //we finally show the panel where the details of the viewing are displayed 
            }
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // delete button once the details of the viewings have been displayed 
        int tampon = -1;
        int tampon2 = -1;
        int tampon3 = -1;
        //temporary buffers 
        VisitDAOImpl vdao = new VisitDAOImpl();
        //we create an object of the VisitDAOImpl class, to delete the viewing later in the database
        String selected1 = (String) jComboBox1.getSelectedItem();
        //we get what has been selected in the combo box 
        for (int i = 0; i < propviewing.size(); i++) {
            //we go through the properties of the connected seller that have at least one viewing 
            if (selected1.equals(propviewing.get(i).getdescription() + " idproperty : " + propviewing.get(i).getid())) {
                //if what has been selected equals the description + the id of the property coresponding 

                tampon = i;
                //we set the value of the buffer to i 
            }
        }
        String selected2 = (String) jComboBox2.getSelectedItem();
        //we get what has been selected in the second combo box

        for (int j = 0; j < myviewings.size(); ++j) {
            //we go through the list of the viewings of the seller 
            if ((myviewings.get(j).getidprop() == propviewing.get(tampon).getid()) && ((myviewings.get(j).displaydate() + " idviewing : " + myviewings.get(j).getid()).equals(selected2))) {
                //if the id of the property is the same id as the property of the viewing and if what has been selected corresponds to the date + the id of the viewing  
                tampon2 = j;
                //we set the value of the second buffer to j
            }
        }

        for (int k = 0; k < v.size(); ++k) //we go through all the viewings of the app 
        {
            if (v.get(k).getid() == myviewings.get(tampon2).getid()) //if the id of one of the viewing is equal to the id of the viewing of the seller
            {
                tampon3 = k;
                //we set the value of the buffer to k 
            }
        }

        vdao.deleteviewing(myviewings.get(tampon2));
        //we delete the viewing in the database 
        myviewings.remove(myviewings.get(tampon2));
        //we delete the considered viewing in the personal array list of viewings 
        v.remove(v.get(tampon3));
        //we delete the considered viewing in the array list of viewings 
        int buffer = 0;
        //temporary buffer
        for (int i = 0; i < myviewings.size(); ++i) //we go through the list of the personal viewings 
        {
            if (myviewings.get(i).getidprop() == propviewing.get(tampon).getid()) //if the id of the property of one of the personal viewings equals the id of the corresponding property 
            {
                buffer++;
                //we increment the buffer 
            }
        }
        if (buffer == 0) //if the buffer has not been incremented 
        {
            propviewing.remove(propviewing.get(tampon));
            //we remove the corresponding property of the personal list of properties of the seller  that have a viewing
        }
        JOptionPane.showMessageDialog(null, "Viewing deleted");
        //successful delete 
        this.setVisible(false);
        //we need to regenerate this frame
        if (myviewings.isEmpty()) {
            //if there are no viewings left for this seller we go back on its first page
            SellerFirst b = new SellerFirst(newseller, buyers, sellers, emp, pr, v, o);
            b.setVisible(true);
        } else {
            //if there are still viewings for this seller
            SellerDeleteViewing a = new SellerDeleteViewing(newseller, buyers, sellers, emp, pr, v, o, myviewings, propviewing);
            //we create the same new frame
            a.setVisible(true);
            //we set it visible 
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    public void initjcb1() {
        //function that enables to fill the combobox with the properties of the connected seller that have at least one viewing 
        for (int i = 0; i < propviewing.size(); ++i) {
            //we go through the properties of the seller that have at least one viewing 

            jComboBox1.addItem(propviewing.get(i).getdescription() + " idproperty : " + propviewing.get(i).getid());
            //we add the items to the combo box one by one

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellerDeleteViewing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellerDeleteViewing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellerDeleteViewing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellerDeleteViewing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SellerDeleteViewing(newseller, buyers, sellers, emp, pr, v, o, myviewings, propviewing).setVisible(true);
            }
        });
    }

    private static ArrayList<Buyer> buyers = new ArrayList<>();
    //array list of all the application buyers 
    private static ArrayList<Seller> sellers = new ArrayList<>();
    //array list of all the application sellers 
    private static ArrayList<Employee> emp = new ArrayList<>();
    //array list of all the application employees 
    private static ArrayList<Property> pr = new ArrayList<>();
    //array list of all the application properties
    private static ArrayList<Visit> v = new ArrayList<>();
    //array list of all the application viewings
    private static ArrayList<Offer> o = new ArrayList<>();
    //array list of all the application offers
    private static ArrayList<Property> propviewing = new ArrayList<>();
    //array list of all the properties of the connected seller that have at least one viewing 
    private static ArrayList<Visit> myviewings = new ArrayList<>();
    //list of the viewings of the connected seller 

    private static Seller newseller;
    //connected seller 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelLocation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelViewings;
    // End of variables declaration//GEN-END:variables
}
