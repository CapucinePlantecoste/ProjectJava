//this class if the second frame that is visible when you want to log in (as a buyer, a seller or an employee, the frame is the same)
package View;

import Model.Visit;
import Model.Seller;
import Model.Property;
import Model.Offer;
import Model.Employee;
import Model.Buyer;
import javax.swing.JOptionPane;

import java.util.ArrayList;

/**
 *Class ConnectingJFrame is the jFrame that appears when a user wants to connect to his account
 * @author CAP
 */
public class ConnectingJFrame extends javax.swing.JFrame {
//this frame corresponds to the one we open when we want to connect as a buyer, seller or employee

      /**
     * Constructor of the class
     * @param t is the type of user connected
     * @param b is the ArrayList of all the buyers of the app
     * @param s is the ArrayList of all the sellers of the app
     * @param e is the ArrayList of all the employees of the app
     * @param prop is the ArrayList of all the properties of the app
     * @param vis is the ArrayList of all the visits of the app
     * @param off is the ArrayList of all the offers of the app
     */
    public ConnectingJFrame(String t, ArrayList<Buyer> b, ArrayList<Seller> s, ArrayList<Employee> e, ArrayList<Property> prop, ArrayList<Visit> vis, ArrayList<Offer> off) {//constructor 
        //constructor of the class
        initComponents();
        //automatically generated initialisation of the frame components
        type = t;
        //String corresponding to the type of the person who is trying to connect (employee,buyer or seller)
        buyers = b;
        //Array List of all the buyers of the application
        sellers = s;
        //Array List of all the sellers of the application
        emp = e;
        //Array List of all the employees of the application
        pr = prop;
        //Array List of all the properties of the application
        v = vis;
        //Array List of all the viewings of the application
        o = off;
        //Array List of all the offers of the application
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);
        jPanel2.add(jLabel2);
        jLabel2.setBounds(1090, 100, 60, 100);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("We are pleased to see you again !");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectjava/logo 2 projet info.png"))); // NOI18N

        jButton1.setText("<= Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(179, 179, 179)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jPanel2.add(jPanel4);
        jPanel4.setBounds(0, 0, 740, 850);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jButton5.setText("Log In");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(1120, 520, 140, 50);

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Password");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(jLabel7);
        jLabel7.setBounds(970, 350, 160, 40);

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 153));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Username (email adress)");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(jLabel9);
        jLabel9.setBounds(960, 210, 380, 30);

        jTextField2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField2);
        jTextField2.setBounds(970, 250, 410, 50);

        jPasswordField1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPanel2.add(jPasswordField1);
        jPasswordField1.setBounds(980, 390, 400, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1575, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Log in button, once the customer has filled all the fields 
        // we have to check here the username and the password

        password = jPasswordField1.getText();
        //we get the field of the password 
        username = jTextField2.getText();
        //we get the field of the username
        int j = 0;
        //temporary buffer 
        if (type.equals("buyers")) {
            //if the customer is a buyer

            for (int i = 0; i < buyers.size(); ++i) {
                //we go through the whole list of buyers 

                if (buyers.get(i).getpassword().equals(password) && buyers.get(i).getusername().equals(username)) {
                //we check if the username and password correspond to those in the database  
                    //Connexion succeeded

                    j++;
                    //we increment the buffer 
                    BuyerFirst newframe = new BuyerFirst(buyers.get(i), buyers, sellers, emp, pr, v, o);
                    //we open a new frame for the buyer, because the customer is a buyer 
                    newframe.nom();
                    //we add the name of the customer on this following page

                    newframe.setVisible(true);
                    //we open the new frame
                    newframe.toFront();
                    this.setVisible(false);
                    //we close this frame
                }

            }
            if (j == 0) //here, the connection did not succeed because password and/or username are wrong
            {
                JOptionPane.showMessageDialog(null, "Password and username are not correct. Try again.");
                //message shown to say so
            }
        } else if (type.equals("sellers")) {
            //if the customer is a seller

            for (int i = 0; i < sellers.size(); ++i) {
                //we go through the whole list of sellers

                if (sellers.get(i).getpassword().equals(password) && sellers.get(i).getusername().equals(username)) {
                    //we check if the username and password correspond to those in the database  
                    //connexion succeeded
                    j++;
                    //we increment the buffer 
                    SellerFirst newframe = new SellerFirst(sellers.get(i), buyers, sellers, emp, pr, v, o);
                    //we open a new frame for the seller, because the customer is a seller 
                    newframe.nom();
                    //we add the name of the customer on this following page

                    newframe.setVisible(true);
                    //we open the new frame
                    newframe.toFront();
                    this.setVisible(false);
                    //we close this frame

                }
            }
            if (j == 0) //connection didn't succeed because password and/or username are wrong
            {
                JOptionPane.showMessageDialog(null, "Password and username are not correct. Try again.");
                //message shown to say so
            }
        } else //if the customer is an employee
        {
            for (int i = 0; i < emp.size(); ++i) //we go through the whole list of employees
            {
                if (emp.get(i).getpassword().equals(password) && emp.get(i).getusername().equals(username)) //we check if the username and password correspond to those in the database  
                {//connexion worked
                    j++;
                    //we increment the buffer
                    EmployeeFirst newframe = new EmployeeFirst(emp.get(i), buyers, sellers, emp, pr, v, o);
                    //we open a new frame for the employee, because the person is an employee 
                    newframe.nom();
                    //we add the name of the employee on the following page 

                    newframe.setVisible(true);
                    //we open the new frame

                    newframe.toFront();
                    this.setVisible(false);
                    //we close this frame 
                }
            }
            if (j == 0) //connection didn't succeed because password and/or username are wrong
            {
                JOptionPane.showMessageDialog(null, "Password and username are not correct. Try again.");
                //message shown to say so
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed


    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        //text field of the username
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //back button
        this.toBack();
        //if we click on the back button
        setVisible(false);
        //this page disappears 
        First a = new First(buyers, sellers, emp, pr, v, o);
        //we open a new frame of the first page 
        a.toFront();
        //we go back on the first page 
        a.setState(java.awt.Frame.NORMAL);
        a.setVisible(true);
        //we set the new frame visible 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        //Text field for the password 
    }//GEN-LAST:event_jPasswordField1ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ConnectingJFrame(type, buyers, sellers, emp, pr, v, o).setVisible(true);//we open the frame when we run it 
            }
        });
    }

    private static ArrayList<Buyer> buyers = new ArrayList<>();
    //array list of all the application buyers 
    private static ArrayList<Seller> sellers = new ArrayList<>();
    //array list of all the application sellers 
    private static ArrayList<Employee> emp = new ArrayList<>();
    //array list of all the application employees 
    private static ArrayList<Property> pr = new ArrayList<>();
    //array list of all the application properties
    private static ArrayList<Visit> v = new ArrayList<>();
    //array list of all the application viewings
    private static ArrayList<Offer> o = new ArrayList<>();
    //array list of all the application offers
    private static String type;
    //String corresponding of the type of the customer (buyer, seller, employee)
    private String password;
    //password of the customer
    private String username;
    //username of the username

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
