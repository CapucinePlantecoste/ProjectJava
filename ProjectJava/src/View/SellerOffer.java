//this frame displays when the seller wants to see the offers made to his property for sale 
package View;

import Model.Visit;
import Model.Seller;
import Model.Property;
import Model.Offer;
import Model.Employee;
import Model.Buyer;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import Model.OfferDAOImpl;
import Model.PropertyDAOImpl;

/**
 * Class SellerOffer which is a JFrame which can display all the offers made on
 * one of the properties of the seller connected
 *
 * @author CAP
 */
public class SellerOffer extends javax.swing.JFrame {

    /**
     * Constructor of the class
     *
     * @param a is the Seller who is connected
     * @param b is the ArrayList of all the buyers of the app
     * @param s is the ArrayList of all the sellers of the app
     * @param e is the ArrayList of all the employees of the app
     * @param prop is the ArrayList of all the properties of the app
     * @param vis is the ArrayList of all the visits of the app
     * @param off is the ArrayList of all the offers of the app
     * @param myo is the ArrayList of all the offers made on one of the
     * properties of the seller connected
     */
    public SellerOffer(Seller a, ArrayList<Buyer> b, ArrayList<Seller> s, ArrayList<Employee> e, ArrayList<Property> prop, ArrayList<Visit> vis, ArrayList<Offer> off, ArrayList<Offer> myo) {
        //constructor 
        buyers = b;
        //Array List of all the buyers of the application
        sellers = s;
        //Array List of all the sellers of the application
        emp = e;
        //Array List of all the employees of the application
        pr = prop;
        //Array List of all the properties of the application
        v = vis;
        //Array List of all the viewings of the application
        o = off;
        //Array List of all the offers of the application
        newseller = a;
        //current connected seller 
        myoffers = myo;
        //offers of the connected seller 

        initComponents();
        //automatically generated onstructor 
        this.initjcb1();
        //function that enables to add the properties of the seller that have received offers to the combo box 
        jPanelOffers.hide();
        //in the beginning, all the other panels are hidden 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanelOffers = new javax.swing.JPanel();
        jLabelDescription = new javax.swing.JLabel();
        jLabelLocation = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelRealPrice = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(204, 204, 0));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectjava/logo 2 projet info.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select one of your offers" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("<= Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("See the offers for your properties");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(173, 173, 173)
                    .addComponent(jLabel2)
                    .addContainerGap(567, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(61, 61, 61)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(70, 70, 70)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(700, Short.MAX_VALUE)))
        );

        jPanel2.add(jPanel4);
        jPanel4.setBounds(0, 0, 740, 830);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton5.setText("Log Out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(1420, 30, 100, 23);

        jPanelOffers.setBackground(new java.awt.Color(255, 255, 255));

        jLabelDescription.setBackground(new java.awt.Color(255, 255, 255));
        jLabelDescription.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDescription.setForeground(new java.awt.Color(204, 204, 0));

        jLabelLocation.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLocation.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelLocation.setForeground(new java.awt.Color(204, 204, 0));

        jLabelPrice.setBackground(new java.awt.Color(255, 255, 255));
        jLabelPrice.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelPrice.setForeground(new java.awt.Color(204, 204, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 0));
        jLabel1.setText("Details of the Offer : ");

        jLabelRealPrice.setBackground(new java.awt.Color(255, 255, 255));
        jLabelRealPrice.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelRealPrice.setForeground(new java.awt.Color(204, 204, 0));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setText("Accept the offer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton3.setText("Decline the offer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOffersLayout = new javax.swing.GroupLayout(jPanelOffers);
        jPanelOffers.setLayout(jPanelOffersLayout);
        jPanelOffersLayout.setHorizontalGroup(
            jPanelOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOffersLayout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelOffersLayout.createSequentialGroup()
                .addGroup(jPanelOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOffersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOffersLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jButton2)
                        .addGap(54, 54, 54)
                        .addComponent(jButton3)
                        .addGap(0, 116, Short.MAX_VALUE))
                    .addGroup(jPanelOffersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOffersLayout.createSequentialGroup()
                                .addComponent(jLabelLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelOffersLayout.createSequentialGroup()
                                .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelRealPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanelOffersLayout.setVerticalGroup(
            jPanelOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOffersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabelDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanelOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRealPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanelOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(26, 26, 26))
        );

        jPanel2.add(jPanelOffers);
        jPanelOffers.setBounds(850, 290, 620, 320);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1560, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //combo box where all the offers made for the properties of the seller are displayed

        int tampon = 0;
        //temporary buffer        

        String selected = (String) jComboBox1.getSelectedItem();
        //we get what has been selected in the combo box 
        if (selected.equals("Select one of your offers")) {
            //if the seller doesn't select any option but remains on the first option of the combo box
            jPanelOffers.hide();
            //nothing happens so we hide all the other panels  
        } else {
            //otherwise, the seller selected one of the option of the combo box 
            for (int i = 0; i < myoffers.size(); ++i) {
                //we go through the offers of the seller  
                {
                    for (int j = 0; j < pr.size(); ++j) //we go through the properties of the application 
                    {
                        if (selected.equals(pr.get(j).getdescription() + " idoffer : " + myoffers.get(i).getid())) //if what has been selected equals the description + the id of the corresponding property 
                        {
                            tampon = i;
                            //we set the value of the buffer to i
                        }
                    }
                }
            }
            this.display(myoffers.get(tampon));
            //we display the differents fields of the panel offer via the display function 
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    //Function to display all the information from a given offer
    /**
     * Method that dsiplays all the information about an offer made on one of
     * the properties of the seller connected
     *
     * @param a is the Offer considered
     */
    public void display(Offer a) {
        //buffer
        int stamp = 0;

        //We look for the house that corresponds to the offer
        //So we look for the house that has the same id as the idprop of the offer
        for (int i = 0; i < pr.size(); ++i) {
            if (pr.get(i).getid() == a.getidprop()) {
                //Once we find it we that the index of it
                stamp = i;
            }
        }

        //We fill all the fields with the appropriate things
        jLabelDescription.setText(" Description : " + pr.get(stamp).getdescription());
        //we get the description of the corresponding house
        jLabelLocation.setText(" Location : " + pr.get(stamp).getlocation());
        //its location
        jLabelRealPrice.setText("Price of the property : " + pr.get(stamp).getprice() + "€");
        //We get the price of the house
        jLabelPrice.setText("Amount of the offer : " + a.getprice() + "€");
        //The amount of the offer

        //We show the panel
        jPanelOffers.show();
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.toBack();//if we click on the back button
        setVisible(false);//this page disappears
        SellerFirst a = new SellerFirst(newseller, buyers, sellers, emp, pr, v, o);//we go back on the first page
        a.setVisible(true);
        new SellerFirst(newseller, buyers, sellers, emp, pr, v, o).setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //this.toBack();//if we click on the back button
        setVisible(false);//this page disappears
        new First(buyers, sellers, emp, pr, v, o).toFront();//we go back on the first page
        new First(buyers, sellers, emp, pr, v, o).setState(java.awt.Frame.NORMAL);
        new First(buyers, sellers, emp, pr, v, o).setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        OfferDAOImpl odao = new OfferDAOImpl();
        //We create an OfferDAOImpl object to set the changes in the databse later
        PropertyDAOImpl pdao = new PropertyDAOImpl();
        //We create a PropertyDAOImpl object to set the changes about the property in the database later
        //We have three buffers
        int tampon = 0;
        int tampon2 = 0;
        int tampon3 = 0;
        //We get what is selected from the jcombobox
        String selected = (String) jComboBox1.getSelectedItem();
        for (int i = 0; i < myoffers.size(); ++i) {
            //We cross all the offers of the connected seller
            {
                for (int j = 0; j < pr.size(); ++j) {
                    //We cross all the properties of the app
                    if (selected.equals(pr.get(j).getdescription() + " idoffer : " + myoffers.get(i).getid())) {
                        //If what is selcted in the jcombobox corresponds to the description of house j and the id of offer i
                        //We get those values as buffers
                        tampon = i;
                        tampon2 = j;

                    }
                }
            }
        }

        //We look for the offer in the arraylist of all the offers made on the app
        for (int k = 0; k < o.size(); ++k) {
            if (o.get(k).getid() == myoffers.get(tampon).getid()) {
                //When we find it
                //We set a third buffer to its index in the arraylist
                tampon3 = k;
            }
        }

        odao.acceptoffer(o.get(tampon3), o);
        //We call the acceptoffer method for the corresponding offer that sets it accepted in the database
        pdao.offeraccepted(pr.get(tampon2));
        //We call the offeraccepted method that sets that the house is sold in the database
        pr.get(tampon2).setsold(true);
        //We set the sold attribute of the corresponding house at true
        myoffers.get(tampon).setaccepted(true);
        //We set the attribute accepted of the corresponding offer at true
        myoffers.remove(myoffers.get(tampon));
        // We remove this offer from the list my offers as it has been treated
        for (int l = 0; l < myoffers.size(); ++l) {
            //We look for all the offers made on this property that are different from this offer
            if ((myoffers.get(l).getidprop() == myoffers.get(tampon).getidprop()) && (o.get(l).getid() != myoffers.get(tampon).getid())) {
                //If we find one we say that this offer has been declined
                myoffers.get(l).setdeclined(true);
                // We consider that this offer is treated because if one offer is accepted for a house all the others for the same one are automatically declined
                myoffers.remove(myoffers.get(l));
            }
        }
        JOptionPane.showMessageDialog(null, "This offer has been accepted");
        //We let the seller know that the action is confirmed
        this.setVisible(false);
        if (myoffers.isEmpty()) {
            // If there are not any offers left we lead the seller to its main page 
            SellerFirst b = new SellerFirst(newseller, buyers, sellers, emp, pr, v, o);
            b.setVisible(true);

        } else {
            //if there are still offers
            //We reload the page with all the changes
            SellerOffer a = new SellerOffer(newseller, buyers, sellers, emp, pr, v, o, myoffers);
            a.setVisible(true);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // We create an OfferDAOImpl object to set the changes later in the database
        OfferDAOImpl odao = new OfferDAOImpl();
        //We create a buffer
        int tampon = 0;
        //We get the selected item from the combo box
        String selected = (String) jComboBox1.getSelectedItem();
        for (int i = 0; i < myoffers.size(); ++i) {
            //We cross all the offers of the connected seller
            {
                for (int j = 0; j < pr.size(); ++j) {
                    //We cross all the properties of the app
                    if (selected.equals(pr.get(j).getdescription() + " idoffer : " + myoffers.get(i).getid())) {
                        //If what is selcted in the jcombobox corresponds to the description of house j and the id of offer i
                        //We get the index value of the offer as a buffer
                        tampon = i;

                    }
                }
            }
        }

        odao.declineoffer(myoffers.get(tampon));
        // We call the decline offer method to say in the database that the offer has been declined
        myoffers.get(tampon).setdeclined(true);
        //We set the attribute declined of the offer at true
        myoffers.remove(myoffers.get(tampon));
        //We remove it from my offers as it has been treated
        JOptionPane.showMessageDialog(null, "This offer has been declined");
        this.setVisible(false);
        if (myoffers.isEmpty()) {
            // If there are not any offers left we lead the seller to its main page 
            SellerFirst b = new SellerFirst(newseller, buyers, sellers, emp, pr, v, o);
            b.setVisible(true);

        } else {
            //if there are still offers
            //We reload the page with all the changes
            SellerOffer a = new SellerOffer(newseller, buyers, sellers, emp, pr, v, o, myoffers);
            a.setVisible(true);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * Method that fills a jCOmboBox with all the offers made on one of the
     * properties of the seller connected
     */
    public void initjcb1() {
        // This function is to set the jcombobox with all the options possible
        for (int i = 0; i < myoffers.size(); ++i) {
            // We cross all the offers of the seller
            for (int j = 0; j < pr.size(); ++j) {
                //We cross all the property of the app
                if (myoffers.get(i).getidprop() == pr.get(j).getid()) {
                    //If the offer idprop and the id of the house are the same
                    jComboBox1.addItem(pr.get(j).getdescription() + " idoffer : " + myoffers.get(i).getid());
                    //We add an option that corresponds to that in the jcombobox
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellerOffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellerOffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellerOffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellerOffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SellerOffer(newseller, buyers, sellers, emp, pr, v, o, myoffers).setVisible(true);
            }
        });
    }

    private static ArrayList<Buyer> buyers = new ArrayList<>();//array list of all the application buyers 
    private static ArrayList<Seller> sellers = new ArrayList<>();//array list of all the application sellers 
    private static ArrayList<Employee> emp = new ArrayList<>();//array list of all the application sellers 
    private static ArrayList<Property> pr = new ArrayList<>();// arraylist of all the application properties
    private static ArrayList<Visit> v = new ArrayList<>();// arraylist of all the viewings of the app
    private static ArrayList<Offer> o = new ArrayList<>();// arraylist of all the offers of the app
    private static ArrayList<Offer> myoffers = new ArrayList<>();// arraylist of all the offers made on one of the properties of the seller connected

    private static Seller newseller;//seller connected
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelLocation;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelRealPrice;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelOffers;
    // End of variables declaration//GEN-END:variables
}
