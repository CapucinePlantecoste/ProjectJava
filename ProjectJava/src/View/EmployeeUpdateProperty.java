//this class is he jframe used for an employee when he wants to update the properties of a property 
package View;

import Model.Buyer;
import Model.Employee;
import Model.Offer;
import Model.Property;
import Model.PropertyDAOImpl;
import Model.Seller;
import Model.Visit;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * Class EmployeeUpdateProperty that displays all the items needed and that
 * enables the employee to update details about property
 *
 * @author CAP
 */
public class EmployeeUpdateProperty extends javax.swing.JFrame {

    /**
     * Constructor of the class
     *
     * @param coucou is the Employee who is connected
     * @param b is the ArrayList of all the buyers of the app
     * @param s is the ArrayList of all the sellers of the app
     * @param e is the ArrayList of all the employees of the app
     * @param prop is the ArrayList of all the properties of the app
     * @param vis is the ArrayList of all the visits of the app
     * @param off is the ArrayList of all the offers of the app
     */
    public EmployeeUpdateProperty(Employee coucou, ArrayList<Buyer> b, ArrayList<Seller> s, ArrayList<Employee> e, ArrayList<Property> prop, ArrayList<Visit> vis, ArrayList<Offer> off) {
        //constructor of the class
        buyers = b;
        //Array List of all the buyers of the application
        sellers = s;
        //Array List of all the sellers of the application
        emp = e;
        //Array List of all the employees of the application
        pr = prop;
        //Array List of all the properties of the application
        v = vis;
        //Array List of all the viewings of the application
        o = off;
        //Array List of all the offers of the application
        employee = coucou;
        //current connected employee

        initComponents();
        //automatically generated constructor 
        initjcb1();
        //function that enables to fill the combobox with the properties of the application
        jPanelApartment.hide();
        jPanelHouse.hide();
        //in the beginning, all the other panels are hidden 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanelApartment = new javax.swing.JPanel();
        jTextFieldPrice1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldLocation1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldNumberRoom1 = new javax.swing.JTextField();
        jTextFieldNumberBedroom1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldSurface1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextFieldNumberFloor1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldFloorNumber = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldDescription1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextFieldElevator = new javax.swing.JTextField();
        jTextFieldParking = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jPanelHouse = new javax.swing.JPanel();
        jTextFieldPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldLocation = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldNumberRoom = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldSurface = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldNumberFloor = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldGardenSurface = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldDescription = new javax.swing.JTextField();
        jTextFieldSP = new javax.swing.JTextField();
        jTextFieldNumberBedroom = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);
        jPanel2.add(jLabel2);
        jLabel2.setBounds(1090, 100, 60, 100);

        jPanelApartment.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldPrice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPrice1KeyTyped(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 153, 102));
        jLabel21.setText("Price (in €)");

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 153, 102));
        jLabel22.setText("Location");

        jTextFieldLocation1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldLocation1KeyTyped(evt);
            }
        });

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 153, 102));
        jLabel23.setText("Number of rooms");

        jTextFieldNumberRoom1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumberRoom1KeyTyped(evt);
            }
        });

        jTextFieldNumberBedroom1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumberBedroom1KeyTyped(evt);
            }
        });

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 153, 102));
        jLabel24.setText("Number of Bedrooms");

        jTextFieldSurface1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldSurface1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSurface1KeyTyped(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 153, 102));
        jLabel25.setText("Surface (m²)");

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 153, 102));
        jLabel26.setText("Number of floors");

        jTextFieldNumberFloor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumberFloor1KeyTyped(evt);
            }
        });

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 153, 102));
        jLabel27.setText("Parking");

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 153, 102));
        jLabel28.setText("Floor Number");

        jTextFieldFloorNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFloorNumberKeyTyped(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 153, 102));
        jLabel29.setText("Description");

        jTextFieldDescription1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescription1ActionPerformed(evt);
            }
        });

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 153, 102));
        jLabel30.setText("Elevator");

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextFieldElevator.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldElevatorKeyTyped(evt);
            }
        });

        jTextFieldParking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldParkingActionPerformed(evt);
            }
        });
        jTextFieldParking.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldParkingKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelApartmentLayout = new javax.swing.GroupLayout(jPanelApartment);
        jPanelApartment.setLayout(jPanelApartmentLayout);
        jPanelApartmentLayout.setHorizontalGroup(
            jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelApartmentLayout.createSequentialGroup()
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNumberFloor1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jTextFieldSurface1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldElevator)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                .addGap(47, 47, 47)
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldParking, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelApartmentLayout.createSequentialGroup()
                                        .addComponent(jTextFieldFloorNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12))))
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldNumberRoom1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12))))
                    .addGroup(jPanelApartmentLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jTextFieldNumberBedroom1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 197, Short.MAX_VALUE))
                            .addComponent(jTextFieldDescription1))))
                .addContainerGap())
            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelApartmentLayout.setVerticalGroup(
            jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelApartmentLayout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jTextFieldPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelApartmentLayout.createSequentialGroup()
                            .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, 0)
                            .addComponent(jTextFieldNumberRoom1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextFieldLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelApartmentLayout.createSequentialGroup()
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(0, 0, 0)
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNumberFloor1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldElevator, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldParking, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelApartmentLayout.createSequentialGroup()
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jTextFieldFloorNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldDescription1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNumberBedroom1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelApartmentLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanelApartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29))
                                .addGap(2, 2, 2)
                                .addComponent(jTextFieldSurface1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanelApartment);
        jPanelApartment.setBounds(790, 190, 760, 310);

        jPanel4.setBackground(new java.awt.Color(255, 153, 102));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectjava/logo 2 projet info.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Update a property");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Please, select a property you want to update");

        jButton1.setText("<= Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select a property to update" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(131, 131, 131))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addGap(142, 142, 142)
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jPanel2.add(jPanel4);
        jPanel4.setBounds(0, 0, 740, 850);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton5.setText("Log Out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(1360, 100, 100, 23);

        jPanelHouse.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldPrice.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPriceKeyTyped(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 102));
        jLabel6.setText("Price (in €)");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 153, 102));
        jLabel13.setText("Location");

        jTextFieldLocation.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldLocationKeyTyped(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 153, 102));
        jLabel14.setText("Number of rooms");

        jTextFieldNumberRoom.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldNumberRoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumberRoomKeyTyped(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 153, 102));
        jLabel15.setText("Number of Bedrooms");

        jTextFieldSurface.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldSurface.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSurfaceKeyTyped(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 153, 102));
        jLabel16.setText("Surface (m²)");

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 153, 102));
        jLabel17.setText("Number of floors");

        jTextFieldNumberFloor.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldNumberFloor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumberFloorKeyTyped(evt);
            }
        });

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 153, 102));
        jLabel18.setText("Swimming Pool");

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 153, 102));
        jLabel19.setText("Garden Surface (m²)");

        jTextFieldGardenSurface.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldGardenSurface.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldGardenSurfaceKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 153, 102));
        jLabel20.setText("Description");

        jTextFieldDescription.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescriptionActionPerformed(evt);
            }
        });

        jTextFieldSP.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSPKeyTyped(evt);
            }
        });

        jTextFieldNumberBedroom.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldNumberBedroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumberBedroomActionPerformed(evt);
            }
        });
        jTextFieldNumberBedroom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumberBedroomKeyTyped(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelHouseLayout = new javax.swing.GroupLayout(jPanelHouse);
        jPanelHouse.setLayout(jPanelHouseLayout);
        jPanelHouseLayout.setHorizontalGroup(
            jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHouseLayout.createSequentialGroup()
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHouseLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelHouseLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelHouseLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldSP, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNumberBedroom, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHouseLayout.createSequentialGroup()
                        .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelHouseLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNumberRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelHouseLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelHouseLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldGardenSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHouseLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
            .addGroup(jPanelHouseLayout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelHouseLayout.setVerticalGroup(
            jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHouseLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumberRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumberFloor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldGardenSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelHouseLayout.createSequentialGroup()
                        .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNumberBedroom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                    .addGroup(jPanelHouseLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.add(jPanelHouse);
        jPanelHouse.setBounds(760, 490, 790, 330);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1575, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //back button
        this.toBack();
        //if we click on the back button
        setVisible(false);
        //this page disappears
        EmployeeFirst a = new EmployeeFirst(employee, buyers, sellers, emp, pr, v, o);
        //we go back on the first page
        a.setVisible(true);
        //and we set the new frame visible 
        new EmployeeFirst(employee, buyers, sellers, emp, pr, v, o).setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //log out button
        this.toBack();
        //when we click on the button
        setVisible(false);
        //this page disappears
        new First(buyers, sellers, emp, pr, v, o).toFront();
        //we go back on the first page
        new First(buyers, sellers, emp, pr, v, o).setState(java.awt.Frame.NORMAL);
        new First(buyers, sellers, emp, pr, v, o).setVisible(true);
        //we set the new frame visible 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //combo box containing all the properties for sale so that the employee can chose one to update 
        int tampon = -1;
        //temporary buffer 

        String selected = (String) jComboBox1.getSelectedItem();
        //we get what has been selected in the combo box 
        if (selected.equals("Select a property to update")) {
            //if the employee doesn't select any option but remains on the first option of the combo box
            jPanelHouse.hide();
            jPanelApartment.hide();
            //nothing happens so we hide all the other panels

        } else {
            //otherwise, if the employee selected one of the property for sale to update its properties 
            for (int i = 0; i < pr.size(); i++) {
                //we go through the array list of all the properties of the application
                if (selected.equals(pr.get(i).getdescription() + " id : " + pr.get(i).getid())) {
                    //if what has been selected corresponds to the description + id of one of the properties 
                    tampon = i;
                    //we set the value of the buffer to i 
                }
            }
            this.display(pr.get(tampon));
            //we display the information of the property once it is selected via the display function 
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextFieldPrice1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrice1KeyTyped
        //function that unables the user to enter something else than digit (because we want a price)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPrice1KeyTyped

    private void jTextFieldNumberRoom1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberRoom1KeyTyped
        //field corresponding to the number of rooms of the property
    }//GEN-LAST:event_jTextFieldNumberRoom1KeyTyped

    private void jTextFieldNumberBedroom1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberBedroom1KeyTyped
        //function that unables the user to enter something else than digit (because we want a number of bedrooms)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumberBedroom1KeyTyped

    private void jTextFieldSurface1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSurface1KeyTyped
        //function that unables the user to enter something else than digit (because we want a surface)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSurface1KeyTyped

    private void jTextFieldNumberFloor1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberFloor1KeyTyped
        //function that unables the user to enter something else than digit (because we want a number of floors)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumberFloor1KeyTyped

    private void jTextFieldFloorNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFloorNumberKeyTyped
        //function that unables the user to enter something else than digit (because we want a floor number)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldFloorNumberKeyTyped

    private void jTextFieldDescription1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescription1ActionPerformed
        //text field corresponding to the decription of the property
    }//GEN-LAST:event_jTextFieldDescription1ActionPerformed

    private void jTextFieldPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPriceKeyTyped
        //function that unables the user to enter something else than digit (because we want a price)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPriceKeyTyped

    private void jTextFieldNumberRoomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberRoomKeyTyped
        //function that unables the user to enter something else than digit (because we want a number of rooms)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumberRoomKeyTyped

    private void jTextFieldNumberBedroomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberBedroomKeyTyped
        //function that unables the user to enter something else than digit (because we want a number of bedrooms)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumberBedroomKeyTyped

    private void jTextFieldSurfaceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSurfaceKeyTyped
        //function that unables the user to enter something else than digit (because we want a surface)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSurfaceKeyTyped

    private void jTextFieldNumberFloorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberFloorKeyTyped
        //function that unables the user to enter something else than digit (because we want a number of floors)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumberFloorKeyTyped

    private void jTextFieldGardenSurfaceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGardenSurfaceKeyTyped
        //function that unables the user to enter something else than digit (because we want a garden surface)
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldGardenSurfaceKeyTyped

    private void jTextFieldDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescriptionActionPerformed
        //text field corresponding to the description of the property
    }//GEN-LAST:event_jTextFieldDescriptionActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //update button for the house 
        PropertyDAOImpl pdao = new PropertyDAOImpl();
        //we create an object of the PropertyDAOImpl class, to update the property later in the database
        int tampon = -1;
        //temporary buffer
        String selected = (String) jComboBox1.getSelectedItem();
        //we get what has been selected in the combo box of the properties for sale 
        for (int i = 0; i < pr.size(); ++i) {
            //we go through the properties contained in the database 
            if (selected.equals(pr.get(i).getdescription() + " id : " + pr.get(i).getid())) {
                //if what is selected is the same as the decription + id of the corresponding property 
                tampon = i;
                //we set the value of the buffer to i 
            }
        }

        if (jTextFieldPrice.getText().trim().isEmpty() || jTextFieldLocation.getText().trim().isEmpty() || jTextFieldNumberRoom.getText().trim().isEmpty() || jTextFieldNumberFloor.getText().trim().isEmpty() || jTextFieldGardenSurface.getText().trim().isEmpty() || jTextFieldSurface.getText().trim().isEmpty() || jTextFieldNumberBedroom.getText().trim().isEmpty() || jTextFieldDescription.getText().trim().isEmpty() || jTextFieldSP.getText().trim().isEmpty()) {
            //if one or several fields are empty
            JOptionPane.showMessageDialog(null, "One of several fields are empty");
            //we let it know
        } else {
            if (!jTextFieldSP.getText().equals("Yes") && !jTextFieldSP.getText().equals("No")) {
                //otherwise, we want to make sure the swimming pool field will be filled by only "yes" or "no"
                JOptionPane.showMessageDialog(null, " Wrong format of a field. For the field Swimming Pool you must enter 'Yes' or 'No' ");
                //if it is not the case, we let it know
            } else {
                //otherwise, all the consitions are ok, we update the property
                pr.get(tampon).setprice(Double.parseDouble(jTextFieldPrice.getText()));
                //we get the new value of the price and we set it
                pr.get(tampon).setlocation(jTextFieldLocation.getText());
                //we get the new value of the location and we set it
                pr.get(tampon).setnumberroom(Integer.parseInt(jTextFieldNumberRoom.getText()));
                //we get the new value of the number of rooms and we set it
                pr.get(tampon).setnumberfloor(Integer.parseInt(jTextFieldNumberFloor.getText()));
                //we get the new value of the number of floors and we set it
                pr.get(tampon).setsurface(Double.parseDouble(jTextFieldSurface.getText()));
                //we get the new value of the surface and we set it
                pr.get(tampon).setnumberbedroom(Integer.parseInt(jTextFieldNumberBedroom.getText()));
                //we get the new value of the number of bedrooms and we set it
                pr.get(tampon).setdescription(jTextFieldDescription.getText());
                //we get the new value of the description and we set it
                pr.get(tampon).setgardensurface(Double.parseDouble(jTextFieldGardenSurface.getText()));
                //we get the new value of the garden surface and we set it
                if (jTextFieldSP.getText().equals("Yes")) {
                    //if there is a swimming pool  
                    pr.get(tampon).setswimmingpool(true);
                    //we set the value to true 
                } else {
                    //if there is no swimming pool
                    pr.get(tampon).setswimmingpool(false);
                    //we set the value to false 
                }
                pdao.update(pr.get(tampon), 2);
                //with all those new information, we can update the property
                //we send 2 to distinguish the house from the apartment which number is 1
                JOptionPane.showMessageDialog(null, "The changes have been updated");
                //update successful
                this.setVisible(false);
                //we need to regenerate this frame so we close this one
                EmployeeUpdateProperty a = new EmployeeUpdateProperty(employee, buyers, sellers, emp, pr, v, o);
                //we create a new frame of the same type
                a.setVisible(true);
                //we set the new frame visible 
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldParkingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldParkingActionPerformed
        //text field corresponding to the parking 
    }//GEN-LAST:event_jTextFieldParkingActionPerformed

    private void jTextFieldNumberBedroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumberBedroomActionPerformed
        //text field corresponding to the number of bedrooms
    }//GEN-LAST:event_jTextFieldNumberBedroomActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //update button for the apartment
        PropertyDAOImpl pdao = new PropertyDAOImpl();
        //we create an object of the PropertyDAOImpl class, to update the property later in the database
        int tampon = -1;
        //temporary buffer 
        String selected = (String) jComboBox1.getSelectedItem();
        //we get what has been selected 
        for (int i = 0; i < pr.size(); i++) {
            //we go through the properties contained in the database 
            if (selected.equals(pr.get(i).getdescription() + " id : " + pr.get(i).getid())) {
                //if what is selected is the same as the decription + id of the corresponding property 
                tampon = i;
                //we set the value of the buffer to i 
            }
        }
        if (jTextFieldPrice1.getText().trim().isEmpty() || jTextFieldLocation1.getText().trim().isEmpty() || jTextFieldNumberRoom1.getText().trim().isEmpty() || jTextFieldNumberFloor1.getText().trim().isEmpty() || jTextFieldFloorNumber.getText().trim().isEmpty() || jTextFieldSurface1.getText().trim().isEmpty() || jTextFieldNumberBedroom1.getText().trim().isEmpty() || jTextFieldDescription1.getText().trim().isEmpty() || jTextFieldParking.getText().trim().isEmpty() || jTextFieldElevator.getText().trim().isEmpty()) {
            //if one or several fields are empty
            JOptionPane.showMessageDialog(null, "One of several fields are empty");
            //we let it know
        } else {
            //otherwise, we want to make sure the parking and elevator fields will be filled by only "yes" or "no"
            if ((!jTextFieldParking.getText().equals("Yes") && !jTextFieldParking.getText().equals("No")) || (!jTextFieldElevator.getText().equals("Yes") && !jTextFieldElevator.getText().equals("No"))) {
                //if it is not the case, we let it know
                JOptionPane.showMessageDialog(null, " Wrong format of a field. For the fields Elevator and Parking you must enter 'Yes' or 'No' ");
                //if it is not, we let it know
            } else {
                //otherwise, all the consitions are ok, we update the property
                pr.get(tampon).setprice(Double.parseDouble(jTextFieldPrice1.getText()));
                //we get the new value of the price and we set it
                pr.get(tampon).setlocation(jTextFieldLocation1.getText());
                //we get the new value of the location and we set it
                pr.get(tampon).setnumberroom(Integer.parseInt(jTextFieldNumberRoom1.getText()));
                //we get the new value of the number of rooms and we set it
                pr.get(tampon).setnumberfloor(Integer.parseInt(jTextFieldNumberFloor1.getText()));
                //we get the new value of the number of floors and we set it
                pr.get(tampon).setfloornumber(Integer.parseInt(jTextFieldFloorNumber.getText()));
                //we get the new value of the floor number and we set it
                pr.get(tampon).setsurface(Double.parseDouble(jTextFieldSurface1.getText()));
                //we get the new value of the surface and we set it
                pr.get(tampon).setnumberbedroom(Integer.parseInt(jTextFieldNumberBedroom1.getText()));
                //we get the new value of the number of bedrooms and we set it
                pr.get(tampon).setdescription(jTextFieldDescription1.getText());
                //we get the new value of the description and we set it

                if (jTextFieldParking.getText().equals("Yes")) {
                    //if there is a parking  
                    pr.get(tampon).setparking(true);
                    //we set the value to true 
                } else {
                    //if there is no parking 
                    pr.get(tampon).setparking(false);
                    //we set the value to false 
                }
                if (jTextFieldElevator.getText().equals("Yes")) {
                    //if there is an elevator  
                    pr.get(tampon).setelevator(true);
                    //we set the value to true 

                } else {
                    //if there is no elevator  
                    pr.get(tampon).setelevator(false);
                    //we set the value to false
                }
                pdao.update(pr.get(tampon), 1);
                //with all those new information, we can update the property
                JOptionPane.showMessageDialog(null, "The changes have been updated");
                //update successful
                this.setVisible(false);
                //we need to regenerate this frame so we close this one
                EmployeeUpdateProperty a = new EmployeeUpdateProperty(employee, buyers, sellers, emp, pr, v, o);
                //we create a new frame of the same type
                a.setVisible(true);
                //we set it visible 
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldLocation1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocation1KeyTyped
        //function that unables the user to enter digit (because we want a location)
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldLocation1KeyTyped

    private void jTextFieldLocationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocationKeyTyped
        //function that unables the user to enter digit (because we want a location)
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldLocationKeyTyped

    private void jTextFieldElevatorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldElevatorKeyTyped
        //function that unables the user to enter something else than letter (because we want a yes or a no)
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldElevatorKeyTyped

    private void jTextFieldParkingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldParkingKeyTyped
        //function that unables the user to enter something else than letter (because we want a yes or a no)
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldParkingKeyTyped

    private void jTextFieldSPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSPKeyTyped
        //function that unables the user to enter something else than letter (because we want a yes or a no)
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSPKeyTyped

    /**
     * Method that displays all the information of the chosen Property
     *
     * @param a is the Property chosen
     */
    public void display(Property a) {
        //function to display all the information of the property once selected 
        if (a.gettype().equals("Apartment")) {
            //if the property selected is an apartment 

            jTextFieldPrice1.setText(Double.toString(a.getprice()));
            //we fill the price text field with the information
            jTextFieldLocation1.setText(a.getlocation());
            //we fill the location text field with the information
            jTextFieldNumberRoom1.setText(Integer.toString(a.getnumberrooms()));
            //we fill the number of rooms text field with the information
            jTextFieldNumberFloor1.setText(Integer.toString(a.getnumberfloors()));
            //we fill the number of floors field with the information
            jTextFieldFloorNumber.setText(Integer.toString(a.getfloornumber()));
            //we fill the floor number text field with the information
            jTextFieldSurface1.setText(Double.toString(a.getsurface()));
            //we fill the surface text field with the information
            jTextFieldNumberBedroom1.setText(Integer.toString(a.getnumberbedrooms()));
            //we fill the number of bedrooms text field with the information
            jTextFieldDescription1.setText(a.getdescription());
            //we fill the description text field with the information

            if (a.getparking() == true) {
                //if there is a parking
                jTextFieldParking.setText("Yes");
                //we display yes 
            } else {
                //if there is no parking
                jTextFieldParking.setText("No");
                //we display no
            }
            if (a.getelevator() == true) {
                //if there is an elevator
                jTextFieldElevator.setText("Yes");
                //we display yes
            } else {
                //if there is no elevator 
                jTextFieldElevator.setText("No");
                //we display no
            }

            jPanelApartment.show();
            jPanelHouse.hide();
            //after this, we can display the apartment panel but hide the house panel (because we consider an apartment)
        } else {
            //if the considered property is a house 
            jTextFieldPrice.setText(Double.toString(a.getprice()));
            //we fill the price text field with the information
            jTextFieldLocation.setText(a.getlocation());
            //we fill the location text field with the information
            jTextFieldNumberRoom.setText(Integer.toString(a.getnumberrooms()));
            jTextFieldNumberFloor.setText(Integer.toString(a.getnumberfloors()));
            jTextFieldSurface.setText(Double.toString(a.getsurface()));
            //we fill the surface text field with the information
            jTextFieldNumberBedroom.setText(Integer.toString(a.getnumberbedrooms()));
            jTextFieldDescription.setText(a.getdescription());
            //we fill the description text field with the information
            jTextFieldGardenSurface.setText(Double.toString(a.getgardensurface()));
            if (a.getswimmingpool() == true) {
                //if there is a swimming pool
                jTextFieldSP.setText("Yes");
                //we set the value to yes 
            } else {
                //if there is no swimming pool
                jTextFieldSP.setText("No");
                //we set the value to no
            }
            jPanelApartment.hide();
            jPanelHouse.show();
            //after this, we can display the house panel but hide the apartment panel (because we consider a house)
        }
    }

    /**
     * Method that fills a jComboBox with all the properties of the app
     */
    public void initjcb1() {
        //function that enables to fill the combobox with the properties of the application
        for (int i = 0; i < pr.size(); ++i) {
            //we go through all the properties of the application
            jComboBox1.addItem(pr.get(i).getdescription() + " id : " + pr.get(i).getid());
            //we add the items one by one to the combo box
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeUpdateProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeUpdateProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeUpdateProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeUpdateProperty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EmployeeUpdateProperty(employee, buyers, sellers, emp, pr, v, o).setVisible(true);
            }
        });
    }

    private static ArrayList<Buyer> buyers = new ArrayList<>();
    //array list of all the application buyers 
    private static ArrayList<Seller> sellers = new ArrayList<>();
    //array list of all the application sellers 
    private static ArrayList<Employee> emp = new ArrayList<>();
    //array list of all the application employees 
    private static ArrayList<Property> pr = new ArrayList<>();
    //array list of all the application offers 
    private static ArrayList<Visit> v = new ArrayList<>();
    //array list of all the application viewings 
    private static ArrayList<Offer> o = new ArrayList<>();
    //array list of all the application offers 

    private static Employee employee;
    //current connected employee

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelApartment;
    private javax.swing.JPanel jPanelHouse;
    private javax.swing.JTextField jTextFieldDescription;
    private javax.swing.JTextField jTextFieldDescription1;
    private javax.swing.JTextField jTextFieldElevator;
    private javax.swing.JTextField jTextFieldFloorNumber;
    private javax.swing.JTextField jTextFieldGardenSurface;
    private javax.swing.JTextField jTextFieldLocation;
    private javax.swing.JTextField jTextFieldLocation1;
    private javax.swing.JTextField jTextFieldNumberBedroom;
    private javax.swing.JTextField jTextFieldNumberBedroom1;
    private javax.swing.JTextField jTextFieldNumberFloor;
    private javax.swing.JTextField jTextFieldNumberFloor1;
    private javax.swing.JTextField jTextFieldNumberRoom;
    private javax.swing.JTextField jTextFieldNumberRoom1;
    private javax.swing.JTextField jTextFieldParking;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldPrice1;
    private javax.swing.JTextField jTextFieldSP;
    private javax.swing.JTextField jTextFieldSurface;
    private javax.swing.JTextField jTextFieldSurface1;
    // End of variables declaration//GEN-END:variables
}
